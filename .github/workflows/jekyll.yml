
# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Azure 

on:
  # Runs on pushes targeting the default branch
  push:
     branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: 	ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Bundler
        run: gem install bundler --user-install
      - name: Add Ruby gems to PATH
        run: echo "PATH=$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH" >> $GITHUB_ENV
      - name: Configure Bundler path
        run: bundle config set path 'vendor/bundle'
      - name: Install gems
        run: bundle install
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
  # Deployment job to Azure Blob Storage
  deploy-azure-blob:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: _site
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Upload to Azure Blob Storage
        run: |
          az storage blob upload-batch -d "$AZURE_BLOB_CONTAINER" --account-name "$AZURE_STORAGE_ACCOUNT" -s /home/runner/work/www-mskold-com/www-mskold-com/_site
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZURE_BLOB_CONTAINER: ${{ secrets.AZURE_BLOB_CONTAINER }}
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
